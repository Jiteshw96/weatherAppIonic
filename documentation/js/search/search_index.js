var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.285,1,1.082]],["body/components/AppComponent.html",[0,2.174,1,1.647,2,2.605,3,0.343,4,0.343,5,1.926,6,1.926,7,1.926,8,1.926,9,0.269,10,1.51,11,0.617,12,2.812,13,2.812,14,3.321,15,1.341,16,3.652,17,0.9,18,2.812,19,3.321,20,2.812,21,2.812,22,0.515,23,0.9,24,3.652,25,1.243,26,1.926,27,4.379,28,3.489,29,3.489,30,0.9,31,1.926,32,2.812,33,0.617,34,0.067,35,1.063,36,0.617,37,0.617,38,1.926,39,2.812,40,2.812,41,2.812,42,0.617,43,1.237,44,0.65,45,0.269,46,0.733,47,1.806,48,1.237,49,1.51,50,1.237,51,1.51,52,0.343,53,0.343,54,1.063,55,2.605,56,1.926,57,1.926,58,1.926,59,1.926,60,2.205,61,4.56,62,4.45,63,0.869,64,2.812,65,2.812,66,1.926,67,3.652,68,1.926,69,1.926,70,1.032,71,1.51,72,1.926,73,1.926,74,0.026,75,0.038,76,0.026]],["title/modules/AppModule.html",[77,0.913,78,1.285]],["body/modules/AppModule.html",[1,2.065,3,0.349,4,0.349,9,0.274,15,0.628,28,2.235,29,2.235,34,0.068,44,0.835,45,0.274,46,0.747,47,1.83,48,1.26,49,1.539,50,1.26,51,1.539,52,0.349,53,0.349,63,0.885,74,0.026,75,0.038,76,0.026,77,0.747,78,2.587,79,0.747,80,0.885,81,2.155,82,2.155,83,2.155,84,1.051,85,1.539,86,1.539,87,1.539,88,1.539,89,1.539,90,1.765,91,1.842,92,1.842,93,1.842,94,1.842,95,1.842,96,1.842,97,1.83,98,1.26,99,1.26,100,1.962,101,1.83,102,1.83,103,2.85,104,1.539,105,1.26,106,2.85,107,1.051,108,1.539,109,2.85,110,1.962,111,1.962,112,1.962,113,1.962,114,1.539,115,1.962,116,1.962,117,1.962,118,1.962,119,1.962,120,1.962,121,1.962,122,1.962,123,1.26,124,1.051,125,1.051,126,1.962,127,1.962,128,1.962,129,1.962,130,1.962,131,1.962]],["title/modules/AppRoutingModule.html",[77,0.913,90,1.082]],["body/modules/AppRoutingModule.html",[3,0.542,4,0.542,9,0.425,34,0.068,44,0.684,45,0.425,52,0.542,53,0.542,71,3.016,74,0.041,75,0.052,76,0.041,79,1.16,84,1.634,90,1.735,101,1.957,102,2.469,107,1.634,132,3.049,133,3.049,134,3.846,135,3.016,136,2.258,137,1.375,138,2.469,139,3.049,140,3.049,141,3.049,142,3.049,143,3.049,144,3.049,145,3.049,146,3.049,147,3.049]],["title/injectables/BuisnessLogicService.html",[91,1.082,148,0.172]],["body/injectables/BuisnessLogicService.html",[3,0.348,4,0.348,9,0.273,11,0.911,17,0.627,22,0.523,23,0.911,25,1.073,30,0.911,33,0.627,34,0.068,35,0.627,36,0.627,37,0.627,42,0.627,44,0.348,45,0.273,52,0.348,53,0.348,54,0.627,74,0.026,75,0.038,76,0.026,91,1.284,125,1.525,138,1.827,148,0.204,149,0.627,150,2.629,151,1.535,152,1.276,153,2.845,154,1.957,155,2.845,156,2.703,157,1.957,158,2.845,159,3.352,160,0.745,161,1.957,162,4.768,163,1.957,164,1.957,165,3.075,166,2.845,167,4.789,168,1.957,169,3.352,170,1.957,171,1.957,172,1.957,173,1.957,174,1.957,175,1.957,176,2.845,177,1.957,178,1.957,179,1.957,180,1.957,181,2.845,182,2.845,183,1.957,184,1.957,185,1.957,186,1.957,187,1.957,188,1.957,189,1.957,190,1.957,191,1.957,192,1.957,193,1.957,194,1.957,195,1.957,196,1.957,197,1.957,198,1.957,199,1.957,200,1.957,201,1.535]],["title/modules/HomePageModule.html",[77,0.913,202,1.285]],["body/modules/HomePageModule.html",[0,1.518,3,0.504,4,0.504,9,0.395,34,0.067,44,0.813,45,0.395,46,1.078,52,0.504,53,0.504,63,1.278,70,2.492,74,0.038,75,0.049,76,0.038,77,1.078,79,1.078,80,1.278,81,2.614,82,1.819,83,1.819,84,1.518,97,2.356,98,1.819,99,1.819,101,1.819,102,2.356,107,1.518,108,2.878,135,2.222,138,1.819,202,2.449,203,2.222,204,2.222,205,2.833,206,3.67,207,2.222,208,3.67,209,2.222,210,2.833,211,2.833]],["title/injectables/OverLapGraphForWeatherPredictionService.html",[92,1.082,148,0.172]],["body/injectables/OverLapGraphForWeatherPredictionService.html",[3,0.266,4,0.266,9,0.209,11,0.744,15,0.744,17,0.912,22,0.621,23,0.744,25,0.479,30,0.479,33,0.479,34,0.068,35,0.479,36,0.479,37,0.479,42,0.479,43,0.96,44,0.413,45,0.209,52,0.266,53,0.266,54,1.272,63,0.674,74,0.02,75,0.031,76,0.02,92,1.048,123,1.492,124,2.277,125,1.722,137,1.285,148,0.167,149,0.479,152,1.084,160,0.569,212,1.822,213,1.173,214,1.048,215,2.323,216,1.495,217,2.849,218,3.213,219,3.213,220,3.48,221,3.683,222,3.213,223,3.213,224,1.495,225,1.822,226,2.849,227,3.213,228,2.52,229,2.323,230,2.323,231,2.323,232,2.323,233,3.683,234,2.323,235,2.849,236,3.213,237,1.173,238,0.674,239,1.173,240,1.495,241,1.173,242,1.495,243,1.495,244,3.683,245,3.201,246,1.495,247,1.495,248,1.495,249,1.495,250,1.495,251,1.495,252,1.495,253,1.495,254,1.495,255,1.495,256,1.495,257,1.495,258,1.495,259,1.495,260,1.495,261,1.495,262,1.495,263,1.495,264,1.495,265,1.495,266,1.495,267,1.495,268,1.495,269,1.495,270,1.173,271,2.234,272,1.495,273,1.495,274,1.495,275,1.495,276,2.323,277,2.323,278,2.323,279,2.323,280,2.234,281,1.173,282,1.495,283,1.495,284,2.729,285,1.495,286,1.495,287,1.495,288,1.495,289,2.323,290,2.323,291,2.323,292,1.495,293,1.495,294,1.495,295,1.495,296,1.495,297,1.495,298,1.495,299,1.495,300,1.495,301,1.495,302,1.495,303,2.849,304,1.495,305,1.495,306,1.495,307,1.495,308,1.495,309,1.495,310,1.495,311,1.495,312,1.495,313,1.495,314,1.495,315,2.323,316,1.495,317,1.495,318,1.495,319,1.495,320,1.495,321,1.495,322,1.495,323,1.495,324,1.495]],["title/injectables/RepositoryService.html",[93,1.082,148,0.172]],["body/injectables/RepositoryService.html",[3,0.352,4,0.352,9,0.276,11,1.311,15,0.919,17,1.08,22,0.529,23,0.919,25,1.08,30,1.184,33,1.08,34,0.068,35,1.08,36,1.184,37,1.08,42,1.184,44,0.511,45,0.276,52,0.352,53,0.352,54,1.08,74,0.027,75,0.038,76,0.027,93,1.294,114,2.902,137,1.294,148,0.206,149,0.634,152,1.092,156,2.376,160,0.754,165,2.629,214,1.294,228,2.902,238,0.893,271,2.25,325,1.553,326,1.842,327,3.928,328,3.212,329,2.87,330,2.87,331,1.98,332,4.095,333,1.98,334,1.98,335,1.98,336,2.87,337,2.902,338,2.902,339,3.7,340,3.928,341,4.095,342,1.98,343,1.98,344,2.87,345,2.87,346,1.98,347,1.98,348,1.553,349,1.98,350,2.87,351,1.98,352,2.87,353,2.87,354,2.87,355,1.98,356,1.98]],["title/injectables/TemperatureConverterService.html",[94,1.082,148,0.172]],["body/injectables/TemperatureConverterService.html",[3,0.496,4,0.496,9,0.389,11,1.162,15,1.162,17,1.293,22,0.745,23,1.162,25,0.892,30,0.892,33,0.892,34,0.068,35,0.892,37,0.892,42,0.892,44,0.496,45,0.389,52,0.496,53,0.496,54,0.892,74,0.037,75,0.049,76,0.037,94,1.638,148,0.261,149,0.892,152,1.537,160,1.06,165,1.789,214,1.638,238,1.257,239,2.185,338,3.167,357,2.847,358,2.185,359,3.63,360,3.63,361,2.786,362,3.63,363,4.278,364,3.63,365,4.038,366,2.786,367,2.786,368,2.786]],["title/injectables/UIServiceServiceService.html",[95,1.082,148,0.172]],["body/injectables/UIServiceServiceService.html",[3,0.328,4,0.328,9,0.258,11,1.222,15,0.872,17,1.037,22,0.493,23,0.872,25,1.037,30,1.222,33,0.872,34,0.068,35,0.872,36,1.037,37,0.872,42,0.872,43,1.75,44,0.485,45,0.258,46,1.233,52,0.328,53,0.328,54,0.872,55,3.133,74,0.025,75,0.037,76,0.025,95,1.23,137,0.833,148,0.196,149,0.591,152,1.52,156,2.081,160,0.702,201,1.448,214,1.23,225,2.806,238,0.833,245,2.541,284,2.137,326,1.75,337,1.448,369,3.133,370,1.448,371,3.817,372,3.24,373,3.578,374,2.726,375,1.846,376,3.817,377,1.846,378,4.468,379,1.846,380,2.726,381,3.995,382,2.726,383,1.846,384,2.993,385,2.726,386,2.726,387,1.846,388,2.726,389,2.726,390,1.846,391,2.726,392,1.846,393,1.846,394,3.578,395,1.846,396,1.846,397,1.846,398,3.578,399,1.846,400,1.846,401,1.846,402,1.846,403,1.846,404,1.846,405,2.726,406,1.846]],["title/injectables/UIToastService.html",[96,1.082,148,0.172]],["body/injectables/UIToastService.html",[3,0.364,4,0.364,9,0.285,11,1.202,15,0.939,17,1.099,22,0.546,23,0.939,25,1.099,30,1.202,33,0.654,34,0.068,35,0.654,36,0.939,37,0.654,42,0.939,44,0.522,45,0.285,46,1.428,52,0.364,53,0.522,54,0.654,60,1.602,74,0.027,75,0.039,76,0.027,96,1.324,137,1.324,148,0.211,149,0.654,152,1.66,160,0.777,214,1.324,238,0.922,326,1.884,328,3.246,348,1.602,384,2.301,407,1.602,408,4.565,409,3.754,410,3.754,411,2.043,412,2.043,413,2.043,414,3.434,415,3.434,416,4.363,417,2.043,418,2.935,419,2.043,420,2.935,421,2.935,422,2.043,423,2.043,424,2.043,425,2.043,426,2.935,427,2.935,428,2.043,429,2.043,430,2.043,431,2.043,432,2.043,433,2.043,434,2.043,435,2.043,436,2.935,437,2.043,438,2.935,439,2.043,440,2.935,441,2.043,442,2.043,443,2.043,444,2.043]],["title/coverage.html",[445,2.576]],["body/coverage.html",[0,2.042,1,1.356,9,0.419,10,2.357,34,0.065,36,0.962,70,1.61,74,0.04,75,0.051,76,0.04,91,1.356,92,1.356,93,1.356,94,1.356,95,1.356,96,1.356,123,1.93,124,1.61,125,1.61,148,0.333,150,2.357,151,2.357,212,2.357,213,2.357,241,2.357,325,2.357,357,2.357,358,2.357,369,2.357,370,2.357,407,2.357,445,2.357,446,3.005,447,3.005,448,3.005,449,4.641,450,3.005,451,3.005,452,3.005,453,3.005,454,3.005,455,3.005,456,3.811,457,3.811,458,3.005,459,3.005,460,3.005]],["title/dependencies.html",[80,1.303,461,1.998]],["body/dependencies.html",[34,0.067,45,0.433,46,1.182,47,2.728,48,1.994,50,1.994,74,0.042,75,0.052,76,0.042,80,1.401,104,3.051,105,2.498,107,1.664,207,2.435,209,2.435,237,2.435,270,2.435,462,4.679,463,3.105,464,3.105,465,3.89,466,3.105,467,3.89,468,3.105,469,3.105,470,3.105,471,3.105,472,3.105,473,3.105,474,3.105,475,3.105,476,3.105,477,3.105]],["title/index.html",[22,0.641,478,1.881]],["body/index.html",[1,2.082,2,2.15,34,0.065,63,1.237,70,2.147,74,0.037,75,0.048,76,0.037,77,1.043,78,2.665,79,1.043,80,1.237,81,1.76,82,1.76,83,1.76,84,1.469,85,2.15,86,2.15,87,2.15,88,2.15,89,2.15,90,1.807,91,1.807,92,1.807,93,1.807,94,1.807,95,1.807,96,1.807,97,2.306,98,1.76,99,1.76,136,1.469,149,0.877,202,2.278,203,2.15,204,2.15,280,2.817,281,2.15,478,2.15,479,2.741]],["title/modules.html",[79,1.25]],["body/modules.html",[34,0.057,74,0.049,75,0.057,76,0.049,78,1.952,79,1.386,90,1.643,105,2.752,124,1.952,202,1.952,480,4.286,481,4.286,482,4.555,483,3.642]],["title/routes.html",[136,1.76]],["body/routes.html",[34,0.06,74,0.052,75,0.06,76,0.052,136,2.078]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{}}}],["0",{"_index":248,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["0.0",{"_index":308,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["0.1",{"_index":300,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["0.9.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":274,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["01d",{"_index":183,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["02d",{"_index":185,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["03d",{"_index":187,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["04d",{"_index":189,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["09d",{"_index":191,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["1",{"_index":315,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["1.9.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":278,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["100",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["10d",{"_index":193,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["11d",{"_index":195,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["1200",{"_index":423,"title":{},"body":{"injectables/UIToastService.html":{}}}],["13d",{"_index":197,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["2",{"_index":280,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"index.html":{}}}],["2.5.4",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["273.15",{"_index":368,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["3",{"_index":479,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":317,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["5.0.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["5.0.7",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":406,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["50d",{"_index":199,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["6",{"_index":281,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"index.html":{}}}],["6.5.1",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":258,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["8.2.14",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["actual_component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["angular/common",{"_index":207,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/RepositoryService.html":{}}}],["angular/core",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":209,"title":{},"body":{"modules/HomePageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"dependencies.html":{}}}],["animation",{"_index":249,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["animationduration",{"_index":247,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["app.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app/buisness",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["app/over",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["app/repository.service",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["app/temperature",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["app/uiservice",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["app/uitoast.service",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["appcomponent.ts",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["application",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":78,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":90,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule,httpclientmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":231,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["assets/images/01d.png",{"_index":184,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/02d.png",{"_index":186,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/03d.png",{"_index":188,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/04d.png",{"_index":190,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/09d.png",{"_index":192,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/10d.png",{"_index":194,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/11d.png",{"_index":196,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/13d.png",{"_index":198,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/50d.png",{"_index":200,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/broken_clouds.png",{"_index":174,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/clear_sky.png",{"_index":166,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/few_clouds.png",{"_index":170,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/mist.png",{"_index":182,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/rain.png",{"_index":178,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/scattered_clouds.png",{"_index":172,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/shower_rain.png",{"_index":177,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["assets/images/snow.png",{"_index":180,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["async",{"_index":328,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/UIToastService.html":{}}}],["available",{"_index":483,"title":{},"body":{"modules.html":{}}}],["await",{"_index":420,"title":{},"body":{"injectables/UIToastService.html":{}}}],["backgroundcolor",{"_index":301,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["bar",{"_index":270,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"dependencies.html":{}}}],["bar._model.x",{"_index":277,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["bar._model.y",{"_index":279,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["bar/ngx",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["beginatzero",{"_index":293,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["beginning",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["bordercapstyle",{"_index":304,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["bordercolor",{"_index":302,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["borderdash",{"_index":306,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["borderdashoffset",{"_index":307,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["borderjoinstyle",{"_index":309,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["bottom",{"_index":264,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["break",{"_index":167,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["broken",{"_index":173,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["browse",{"_index":482,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["buisnesslogicservice",{"_index":91,"title":{"injectables/BuisnessLogicService.html":{}},"body":{"modules/AppModule.html":{},"injectables/BuisnessLogicService.html":{},"coverage.html":{},"index.html":{}}}],["butt",{"_index":305,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["buttons",{"_index":432,"title":{},"body":{"injectables/UIToastService.html":{}}}],["cancel",{"_index":443,"title":{},"body":{"injectables/UIToastService.html":{}}}],["canvas",{"_index":229,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["case",{"_index":162,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["celcius",{"_index":364,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["center",{"_index":262,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart",{"_index":227,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart(linecanvas.nativeelement",{"_index":242,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart.defaults.global.defaultfontfamily",{"_index":260,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart.defaults.global.defaultfontstyle",{"_index":259,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart.helpers.fontstring",{"_index":257,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chart.js",{"_index":237,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"dependencies.html":{}}}],["chartinstance",{"_index":252,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chartinstance.controller.getdatasetmeta(i",{"_index":268,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["chartinstance.ctx",{"_index":255,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["cityname",{"_index":339,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["class",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["clear",{"_index":163,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["clearinterval(interval",{"_index":405,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["click",{"_index":428,"title":{},"body":{"injectables/UIToastService.html":{}}}],["clicked",{"_index":440,"title":{},"body":{"injectables/UIToastService.html":{}}}],["close",{"_index":429,"title":{},"body":{"injectables/UIToastService.html":{}}}],["clouds",{"_index":169,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["cluster_appmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":203,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":204,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["color",{"_index":221,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["commonmodule",{"_index":206,"title":{},"body":{"modules/HomePageModule.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["component_template",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["configuration",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('cancel",{"_index":444,"title":{},"body":{"injectables/UIToastService.html":{}}}],["console.log('favorite",{"_index":439,"title":{},"body":{"injectables/UIToastService.html":{}}}],["console.log(err",{"_index":353,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["const",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["constructor",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["constructor(http",{"_index":331,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["constructor(loading",{"_index":375,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["constructor(platform",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":393,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["constructor(public",{"_index":348,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/UIToastService.html":{}}}],["constructor(toastcontroller",{"_index":411,"title":{},"body":{"injectables/UIToastService.html":{}}}],["continue",{"_index":391,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["convert",{"_index":362,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["converter",{"_index":367,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["converter.service",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["converter.service.ts",{"_index":358,"title":{},"body":{"injectables/TemperatureConverterService.html":{},"coverage.html":{}}}],["converter.service.ts:22",{"_index":361,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["core",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":445,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":389,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["cssclass:\"toast",{"_index":424,"title":{},"body":{"injectables/UIToastService.html":{}}}],["ctx",{"_index":254,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ctx.fillstyle",{"_index":273,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ctx.filltext(data",{"_index":276,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ctx.font",{"_index":256,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ctx.textalign",{"_index":261,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ctx.textbaseline",{"_index":263,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["current",{"_index":336,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["data",{"_index":271,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{}}}],["dataset",{"_index":266,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["dataset.data[index",{"_index":272,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["datasets",{"_index":298,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["date",{"_index":230,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["days",{"_index":345,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["default",{"_index":201,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/UIServiceServiceService.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["dependencies",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"dependencies.html":{},"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["dialog",{"_index":381,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["directive",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["dismiss",{"_index":380,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["dismissloading",{"_index":373,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["display",{"_index":244,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["documentation",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["done",{"_index":441,"title":{},"body":{"injectables/UIToastService.html":{}}}],["drawonchartarea",{"_index":290,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["duration",{"_index":422,"title":{},"body":{"injectables/UIToastService.html":{}}}],["dynamic",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["element",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["enabled",{"_index":283,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["entrycomponents",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":352,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["error",{"_index":341,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["export",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["exports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["false",{"_index":245,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/UIServiceServiceService.html":{}}}],["favorite",{"_index":437,"title":{},"body":{"injectables/UIToastService.html":{}}}],["few",{"_index":168,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["fff",{"_index":313,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{}}}],["fill",{"_index":235,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["five",{"_index":344,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["formsmodule",{"_index":208,"title":{},"body":{"modules/HomePageModule.html":{}}}],["full",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":251,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["getweathericonfromassetfolder",{"_index":153,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["getweathericonfromassetfolder(mweathertype",{"_index":155,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["getweathervaluecurrent",{"_index":329,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getweathervaluecurrent(params",{"_index":334,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getweathervaluecurrent(params:string",{"_index":355,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getweathervaluefivedays",{"_index":330,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getweathervaluefivedays(params",{"_index":342,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["getweathervaluefivedays(params:string",{"_index":349,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["graph",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{},"modules.html":{}}}],["gridlines",{"_index":289,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["handler",{"_index":438,"title":{},"body":{"injectables/UIToastService.html":{}}}],["header",{"_index":427,"title":{},"body":{"injectables/UIToastService.html":{}}}],["home",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{}}}],["home.page",{"_index":210,"title":{},"body":{"modules/HomePageModule.html":{}}}],["homepage",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"index.html":{}}}],["homepagemodule",{"_index":202,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["hoover",{"_index":234,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["hover",{"_index":246,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["html",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["htmlionloadingelement",{"_index":386,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["http",{"_index":327,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["httpclient",{"_index":332,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["httpclientmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":434,"title":{},"body":{"injectables/UIToastService.html":{}}}],["identifier",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["if(index!=5",{"_index":275,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["ignore",{"_index":239,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/TemperatureConverterService.html":{}}}],["image",{"_index":158,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["import",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["import('./home/home.module').then",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["initialize",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["initializeapp",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["inject",{"_index":214,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["injectable",{"_index":148,"title":{"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}},"body":{"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":149,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"index.html":{}}}],["interval",{"_index":401,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["ionic",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ionic/angular",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["ionicmodule.forroot",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicroutestrategy",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["issue",{"_index":415,"title":{},"body":{"injectables/UIToastService.html":{}}}],["item",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["js",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":340,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["json.stringify(mvalue",{"_index":354,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["kelvin",{"_index":363,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["kelvintocelcius",{"_index":359,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["kelvintocelcius(params",{"_index":360,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["label",{"_index":220,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["labels",{"_index":297,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["lap",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{}}}],["legend",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"index.html":{}}}],["line",{"_index":296,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["linecanvas",{"_index":217,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["linechart",{"_index":226,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["linetension",{"_index":299,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["load",{"_index":399,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["load.present().then",{"_index":400,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["loadchildren",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":371,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["loaderloading",{"_index":372,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["loading",{"_index":378,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["loadingcontroller",{"_index":376,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["logic.service",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["logic.service.ts",{"_index":151,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"coverage.html":{}}}],["logic.service.ts:14",{"_index":157,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["logic.service.ts:6",{"_index":154,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["m",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["maintainaspectratio",{"_index":286,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["matching",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{}}}],["max",{"_index":295,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["mdate",{"_index":218,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["mdatetemp",{"_index":219,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["menu",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":384,"title":{},"body":{"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["meta",{"_index":267,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["meta.data.foreach(function",{"_index":269,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["min",{"_index":294,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["minimum",{"_index":236,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["minumun",{"_index":232,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["mist",{"_index":181,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["module",{"_index":77,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["modules",{"_index":79,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["mvalue=await",{"_index":350,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["mweathertype",{"_index":159,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["native/core",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["native/splash",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["native/status",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["network",{"_index":414,"title":{},"body":{"injectables/UIToastService.html":{}}}],["new",{"_index":241,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{}}}],["ngmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{}}}],["nstace",{"_index":388,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["null",{"_index":404,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["number",{"_index":366,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["object",{"_index":228,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{}}}],["oncomplete",{"_index":250,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["option",{"_index":418,"title":{},"body":{"injectables/UIToastService.html":{}}}],["optional",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["options",{"_index":243,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["out",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["overlapgraphforweatherpredictionservice",{"_index":92,"title":{"injectables/OverLapGraphForWeatherPredictionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{},"index.html":{}}}],["overview",{"_index":478,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":461,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["parameters",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["params",{"_index":338,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{}}}],["path",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{}}}],["pathmatch",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["platform",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["pointbackgroundcolor",{"_index":312,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointbordercolor",{"_index":311,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointborderwidth",{"_index":314,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointhitradius",{"_index":323,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointhoverbackgroundcolor",{"_index":318,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointhoverbordercolor",{"_index":319,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointhoverborderwidth",{"_index":321,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointhoverradius",{"_index":316,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["pointradius",{"_index":322,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["position",{"_index":430,"title":{},"body":{"injectables/UIToastService.html":{}}}],["prediction.service",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["prediction.service.ts",{"_index":213,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{}}}],["prediction.service.ts:30",{"_index":224,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["preloadallmodules",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["presenttoast",{"_index":409,"title":{},"body":{"injectables/UIToastService.html":{}}}],["presenttoastwithoptions",{"_index":410,"title":{},"body":{"injectables/UIToastService.html":{}}}],["private",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"injectables/UIServiceServiceService.html":{}}}],["properties",{"_index":326,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["provide",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":160,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["public",{"_index":152,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["rain",{"_index":176,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["redirectto",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["repositoryservice",{"_index":93,"title":{"injectables/RepositoryService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RepositoryService.html":{},"coverage.html":{},"index.html":{}}}],["reset",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}],["responsive",{"_index":285,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["result",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"routes.html":{}}}],["return",{"_index":165,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{}}}],["returns",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["rgba(220,220,220,1",{"_index":320,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["rgba(75,192,192,1",{"_index":303,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["role",{"_index":442,"title":{},"body":{"injectables/UIToastService.html":{}}}],["root",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["root'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["round",{"_index":310,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["routereusestrategy",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{}}}],["routermodule.forchild",{"_index":211,"title":{},"body":{"modules/HomePageModule.html":{}}}],["routermodule.forroot(routes",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":136,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxjs",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["scales",{"_index":287,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["scattered",{"_index":171,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["screen",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["screen/ngx",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["service",{"_index":238,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["service.service",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["service.service.ts",{"_index":370,"title":{},"body":{"injectables/UIServiceServiceService.html":{},"coverage.html":{}}}],["service.service.ts:13",{"_index":377,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["service.service.ts:24",{"_index":387,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["service.service.ts:29",{"_index":390,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["service.service.ts:35",{"_index":383,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["service.service.ts:49",{"_index":379,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["setinterval",{"_index":402,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["show",{"_index":225,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/UIServiceServiceService.html":{}}}],["showbackdrop",{"_index":396,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["shower",{"_index":175,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["showgrapg",{"_index":215,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["showgrapg(linechart",{"_index":216,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["showgrapg(linechart,linecanvas,mdate,mdatetemp,label,color,yaxismin,yaxismax",{"_index":240,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["showloading",{"_index":374,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["showloading(message",{"_index":382,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["side",{"_index":433,"title":{},"body":{"injectables/UIToastService.html":{}}}],["sky",{"_index":164,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["snow",{"_index":179,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/BuisnessLogicService.html":{},"modules/HomePageModule.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/TemperatureConverterService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{}}}],["spangaps",{"_index":324,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["splashscreen",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["src/app/app",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:17",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/buisness",{"_index":150,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"coverage.html":{}}}],["src/app/home/home.module.ts",{"_index":205,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/home/home.page.ts",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["src/app/over",{"_index":212,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{}}}],["src/app/repository.service.ts",{"_index":325,"title":{},"body":{"injectables/RepositoryService.html":{},"coverage.html":{}}}],["src/app/repository.service.ts:12",{"_index":333,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/app/repository.service.ts:19",{"_index":346,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/app/repository.service.ts:27",{"_index":343,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/app/repository.service.ts:45",{"_index":335,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["src/app/temperature",{"_index":357,"title":{},"body":{"injectables/TemperatureConverterService.html":{},"coverage.html":{}}}],["src/app/uiservice",{"_index":369,"title":{},"body":{"injectables/UIServiceServiceService.html":{},"coverage.html":{}}}],["src/app/uitoast.service.ts",{"_index":407,"title":{},"body":{"injectables/UIToastService.html":{},"coverage.html":{}}}],["src/app/uitoast.service.ts:14",{"_index":412,"title":{},"body":{"injectables/UIToastService.html":{}}}],["src/app/uitoast.service.ts:21",{"_index":419,"title":{},"body":{"injectables/UIToastService.html":{}}}],["src/app/uitoast.service.ts:26",{"_index":413,"title":{},"body":{"injectables/UIToastService.html":{}}}],["src/app/uitoast.service.ts:38",{"_index":417,"title":{},"body":{"injectables/UIToastService.html":{}}}],["star",{"_index":435,"title":{},"body":{"injectables/UIToastService.html":{}}}],["start",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/UIToastService.html":{}}}],["statements",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["statusbar",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["string",{"_index":156,"title":{},"body":{"injectables/BuisnessLogicService.html":{},"injectables/RepositoryService.html":{},"injectables/UIServiceServiceService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["supplies",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":480,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":481,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":161,"title":{},"body":{"injectables/BuisnessLogicService.html":{}}}],["table",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["temperature",{"_index":365,"title":{},"body":{"injectables/TemperatureConverterService.html":{}}}],["temperatureconverterservice",{"_index":94,"title":{"injectables/TemperatureConverterService.html":{}},"body":{"modules/AppModule.html":{},"injectables/TemperatureConverterService.html":{},"coverage.html":{},"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["temprature",{"_index":233,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["text",{"_index":436,"title":{},"body":{"injectables/UIToastService.html":{}}}],["then(load",{"_index":397,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["this.chart",{"_index":253,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["this.data.datasets.foreach(function",{"_index":265,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["this.http.get('http://api.openweathermap.org/data/2.5//weather?q='+params+'&appid=d994b85acc1528b1a51fb0273b7ca7c4').topromise().then(data",{"_index":356,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.http.get('http://api.openweathermap.org/data/2.5/forecast?q='+params+'&appid=d994b85acc1528b1a51fb0273b7ca7c4').topromise().then(data",{"_index":351,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["this.initializeapp",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loader",{"_index":398,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["this.loader.dismiss().then",{"_index":403,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["this.loaderloading",{"_index":394,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["this.loading.create",{"_index":395,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["this.platform.ready().then",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["this.splashscreen.hide",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["this.statusbar.styledefault",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["this.toastcontroller.create",{"_index":421,"title":{},"body":{"injectables/UIToastService.html":{}}}],["ticks",{"_index":291,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["toast",{"_index":416,"title":{},"body":{"injectables/UIToastService.html":{}}}],["toast.present",{"_index":426,"title":{},"body":{"injectables/UIToastService.html":{}}}],["toastcontroller",{"_index":408,"title":{},"body":{"injectables/UIToastService.html":{}}}],["tooltips",{"_index":282,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["top",{"_index":431,"title":{},"body":{"injectables/UIToastService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":284,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/UIServiceServiceService.html":{}}}],["tslib",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/RepositoryService.html":{},"injectables/UIServiceServiceService.html":{},"injectables/UIToastService.html":{},"coverage.html":{}}}],["ui",{"_index":385,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["uiloading",{"_index":392,"title":{},"body":{"injectables/UIServiceServiceService.html":{}}}],["uiserviceserviceservice",{"_index":95,"title":{"injectables/UIServiceServiceService.html":{}},"body":{"modules/AppModule.html":{},"injectables/UIServiceServiceService.html":{},"coverage.html":{},"index.html":{}}}],["uitoastservice",{"_index":96,"title":{"injectables/UIToastService.html":{}},"body":{"modules/AppModule.html":{},"injectables/UIToastService.html":{},"coverage.html":{},"index.html":{}}}],["url",{"_index":347,"title":{},"body":{"injectables/RepositoryService.html":{}}}],["useclass",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":337,"title":{},"body":{"injectables/RepositoryService.html":{},"injectables/UIServiceServiceService.html":{}}}],["var",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"injectables/UIServiceServiceService.html":{}}}],["weather",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/BuisnessLogicService.html":{},"injectables/OverLapGraphForWeatherPredictionService.html":{},"coverage.html":{}}}],["width",{"_index":425,"title":{},"body":{"injectables/UIToastService.html":{}}}],["xaxes",{"_index":288,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["yaxes",{"_index":292,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["yaxismax",{"_index":223,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["yaxismin",{"_index":222,"title":{},"body":{"injectables/OverLapGraphForWeatherPredictionService.html":{}}}],["zone.js",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Supplies configuration metadata for an App component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initializeApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor of AppComponent.ts\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splashScreen\n                                                  \n                                                        \n                                                                    SplashScreen\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusBar\n                                                  \n                                                        \n                                                                    StatusBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeApp\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeApp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n                    Initialize Application at beginning\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n/**\n * Supplies configuration metadata for an App component.\n*/\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\n/**\n * Components of platform, splashScreen, statusBar\n*/\nexport class AppComponent {\n/**\n * Constructor of AppComponent.ts\n * @constructor for App Component\n * @param {Platform} platform\n * @param {SplashScreen} splashScreen\n * @param {StatusBar} statusBar\n*/\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n/**\n * Initialize Application at beginning\n*/\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Start Menu\n      \n    \n    \n      \n        Menu Item\n        Menu Item\n        Menu Item\n        Menu Item\n        Menu Item\n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Start Menu                            Menu Item        Menu Item        Menu Item        Menu Item        Menu Item              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomePage', 'selector': 'app-home'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBuisnessLogicService\n\nBuisnessLogicService\n\nAppModule -->\n\nBuisnessLogicService->AppModule\n\n\n\n\n\nOverLapGraphForWeatherPredictionService\n\nOverLapGraphForWeatherPredictionService\n\nAppModule -->\n\nOverLapGraphForWeatherPredictionService->AppModule\n\n\n\n\n\nRepositoryService\n\nRepositoryService\n\nAppModule -->\n\nRepositoryService->AppModule\n\n\n\n\n\nTemperatureConverterService\n\nTemperatureConverterService\n\nAppModule -->\n\nTemperatureConverterService->AppModule\n\n\n\n\n\nUIServiceServiceService\n\nUIServiceServiceService\n\nAppModule -->\n\nUIServiceServiceService->AppModule\n\n\n\n\n\nUIToastService\n\nUIToastService\n\nAppModule -->\n\nUIToastService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BuisnessLogicService\n                        \n                        \n                            OverLapGraphForWeatherPredictionService\n                        \n                        \n                            RepositoryService\n                        \n                        \n                            TemperatureConverterService\n                        \n                        \n                            UIServiceServiceService\n                        \n                        \n                            UIToastService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { RepositoryService } from '../app/repository.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BuisnessLogicService } from '../app/buisness-logic.service';\nimport { UIServiceServiceService } from '../app/uiservice-service.service';\nimport { UIToastService } from '../app/uitoast.service';\nimport { TemperatureConverterService } from '../app/temperature-converter.service';\nimport { OverLapGraphForWeatherPredictionService } from '../app/over-lap-graph-for-weather-prediction.service';\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule,HttpClientModule],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    RepositoryService,\n    UIServiceServiceService,\n    UIToastService,\n    BuisnessLogicService,\n    TemperatureConverterService,\n    OverLapGraphForWeatherPredictionService,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', loadChildren: () => \"import('./home/home.module').then( m => m.HomePageModule)\"},\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BuisnessLogicService.html":{"url":"injectables/BuisnessLogicService.html","title":"injectable - BuisnessLogicService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BuisnessLogicService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/buisness-logic.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getWeatherIconFromAssetFolder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/buisness-logic.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherIconFromAssetFolder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherIconFromAssetFolder(mWeatherType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/buisness-logic.service.ts:14\n                \n            \n\n\n            \n                \n                    Get image path from weather description string \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mWeatherType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuisnessLogicService {\n\n  constructor() { }\n\n  /**\n  * Get image path from weather description string \n  * @param mWeatherType \n  */\n  public getWeatherIconFromAssetFolder(mWeatherType: string): string {\n\n    switch (mWeatherType) {\n      case \"clear sky\": {\n        return \"../../assets/images/clear_sky.png\";\n        break;\n      }\n\n      case \"few clouds\": {\n        return \"../../assets/images/few_clouds.png\";\n        break;\n      }\n\n      case \"scattered clouds\": {\n        return \"../../assets/images/scattered_clouds.png\";\n        break;\n      }\n\n      case \"broken clouds\": {\n        return \"../../assets/images/broken_clouds.png\";\n        break;\n      }\n      case \"shower rain\": {\n        return \"../../assets/images/shower_rain.png\";\n        break;\n      }\n      case \"rain\": {\n        return \"../../assets/images/rain.png\";\n        break;\n      }\n      case \"snow\": {\n        return \"../../assets/images/snow.png\";\n        break;\n      }\n\n      case \"mist\": {\n        return \"../../assets/images/mist.png\";\n        break;\n      }\n      case \"mist\": {\n        return \"../../assets/images/mist.png\";\n        break;\n      }\n\n      case \"01d\": {\n        return \"../../assets/images/01d.png\";\n        break;\n      }\n\n      case \"02d\": {\n        return \"../../assets/images/02d.png\";\n        break;\n      }\n      case \"03d\": {\n        return \"../../assets/images/03d.png\";\n        break;\n      }\n\n      case \"04d\": {\n        return \"../../assets/images/04d.png\";\n        break;\n      }\n      case \"09d\": {\n        return \"../../assets/images/09d.png\";\n        break;\n      }\n      case \"10d\": {\n        return \"../../assets/images/10d.png\";\n        break;\n      }\n      case \"11d\": {\n        return \"../../assets/images/11d.png\";\n        break;\n      }\n      case \"13d\": {\n        return \"../../assets/images/13d.png\";\n        break;\n      }\n      case \"50d\": {\n        return \"../../assets/images/50d.png\";\n        break;\n      }\n      default: {\n        return \"../../assets/images/clear_sky.png\";\n        break;\n      }\n    }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OverLapGraphForWeatherPredictionService.html":{"url":"injectables/OverLapGraphForWeatherPredictionService.html","title":"injectable - OverLapGraphForWeatherPredictionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OverLapGraphForWeatherPredictionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/over-lap-graph-for-weather-prediction.service.ts\n        \n\n            \n                Description\n            \n            \n                Inject to root of app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                showGrapg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showGrapg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showGrapg(lineChart, lineCanvas, mDate, mDateTemp, label, color, yAxisMin, yAxisMax)\n                \n            \n\n\n            \n                \n                    Defined in src/app/over-lap-graph-for-weather-prediction.service.ts:30\n                \n            \n\n\n            \n                \n                    Show Weather Graph\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lineChart\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Chart object\n\n                                    \n                                \n                                \n                                    lineCanvas\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Canvas object\n\n                                    \n                                \n                                \n                                    mDate\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Date array\n\n                                    \n                                \n                                \n                                    mDateTemp\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Minumun temprature\n\n                                    \n                                \n                                \n                                    label\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        For hoover\n\n                                    \n                                \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Fill color of graph\n\n                                    \n                                \n                                \n                                    yAxisMin\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Minimum temprature of graph\n\n                                    \n                                \n                                \n                                    yAxisMax\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Minimum temprature of graph\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Chart } from 'chart.js';\n/**\n * Inject to root of app\n*/\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for Graph\n*/\nexport class OverLapGraphForWeatherPredictionService {\n\n/**\n * @ignore\n */\n  constructor() { }\n\n/**\n * Show Weather Graph\n * @param {Chart} lineChart Chart object\n * @param lineCanvas Canvas object\n * @param mDate Date array\n * @param mDateTemp Minumun temprature\n * @param label For hoover\n * @param color Fill color of graph\n * @param yAxisMin Minimum temprature of graph\n * @param yAxisMax Minimum temprature of graph\n */\n  public showGrapg(lineChart,lineCanvas,mDate,mDateTemp,label,color,yAxisMin,yAxisMax) {\n    lineChart = new Chart(lineCanvas.nativeElement,\n      {\n        options: {\n          legend: {\n            display: false\n          },\n          hover: {\n            animationDuration: 0\n          },\n          animation: {\n            onComplete: function () {\n              const chartInstance = this.chart,\n                ctx = chartInstance.ctx;\n\n              ctx.font = Chart.helpers.fontString(\n                8,\n                Chart.defaults.global.defaultFontStyle,\n                Chart.defaults.global.defaultFontFamily\n              );\n              ctx.textAlign = \"center\";\n              ctx.textBaseline = \"bottom\";\n\n              this.data.datasets.forEach(function (dataset, i) {\n                const meta = chartInstance.controller.getDatasetMeta(i);\n                meta.data.forEach(function (bar, index) {\n                  const data = dataset.data[index];\n                  ctx.fillStyle = \"#000\";\n                  if(index!=5)\n                  ctx.fillText(data, bar._model.x +10, bar._model.y - 2);\n                  else\n                  ctx.fillText(data, bar._model.x -6, bar._model.y - 2);\n                });\n              });\n            }\n          },\n          tooltips: {\n            enabled: true\n          },\n          responsive: true, \n          maintainAspectRatio: false,\n          scales: {\n            xAxes: [\n              {\n                display: false,\n                gridLines: {\n                  drawOnChartArea: false\n                },\n                ticks: {\n                  display: false\n                }\n              }\n            ],\n            yAxes: [\n              {\n                display: true,\n                gridLines: {\n                  drawOnChartArea: false,\n                  display: false\n                },\n                ticks: {\n                  // beginAtZero: true,\n                  min: yAxisMin,\n                  max: yAxisMax,\n                  display: false\n                }\n              }\n            ]\n          }\n        },\n        type: 'line',\n        data: {\n          labels: mDate,\n          datasets: [\n\n            {\n              label: label,\n              fill: true,\n              lineTension: 0.1,\n              backgroundColor: color,\n              borderColor: 'rgba(75,192,192,1)',\n              borderCapStyle: 'butt',\n              borderDash: [],\n              borderDashOffset: 0.0,\n              borderJoinStyle: 'round',\n              pointBorderColor: 'rgba(75,192,192,1)',\n              pointBackgroundColor: '#fff',\n              pointBorderWidth: 1,\n              pointHoverRadius: 5,\n              pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\n              pointHoverBorderWidth: 2,\n              pointRadius: 1,\n              pointHitRadius: 10,\n              data: mDateTemp,\n              spanGaps: false,\n            }\n\n          ]\n        }\n      });\n\n\n\n\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryService.html":{"url":"injectables/RepositoryService.html","title":"injectable - RepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/repository.service.ts\n        \n\n            \n                Description\n            \n            \n                Inject to root of app\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getWeatherValueCurrent\n                            \n                            \n                                    Async\n                                getWeatherValueFiveDays\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/repository.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor description\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                From angular/common/http\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getWeatherValueCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherValueCurrent(params: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/repository.service.ts:45\n                \n            \n\n\n            \n                \n                    Get Current value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CityName\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        JSON Object or 'Error'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getWeatherValueFiveDays\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherValueFiveDays(params: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/repository.service.ts:27\n                \n            \n\n\n            \n                \n                    Get five days Value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CityName\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        JSON Object or 'Error'\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpClient\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/repository.service.ts:19\n                            \n                        \n\n                \n                    \n                        From angular/common/http\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n/**\n * Inject to root of app\n*/\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for Get JSON from URL\n*/\nexport class RepositoryService {  \n  \n\n /**\n * Constructor description\n * @param {HttpClient} http From angular/common/http\n */\n  constructor(public http: HttpClient) { }\n\n\n/**\n * Get five days Value\n * @param params CityName\n * @returns JSON Object or 'Error'\n */\n  async getWeatherValueFiveDays(params:string) {  \n\n    const mValue=await this.http.get('http://api.openweathermap.org/data/2.5/forecast?q='+params+'&APPID=d994b85acc1528b1a51fb0273b7ca7c4').toPromise().then(data => {      \n      return data\n    }, err => {\n      console.log(err);\n      return \"Error\"\n    });\n\n    return JSON.stringify(mValue)   \n  \n  }\n\n  /**\n   * Get Current value\n   * @param params CityName\n   * @returns JSON Object or 'Error'\n   */\n  async getWeatherValueCurrent(params:string) {  \n\n    const mValue=await this.http.get('http://api.openweathermap.org/data/2.5//weather?q='+params+'&APPID=d994b85acc1528b1a51fb0273b7ca7c4').toPromise().then(data => {      \n      return data\n    }, err => {\n      console.log(err);\n      return \"Error\"\n    });\n\n    return JSON.stringify(mValue)   \n  \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TemperatureConverterService.html":{"url":"injectables/TemperatureConverterService.html","title":"injectable - TemperatureConverterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TemperatureConverterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/temperature-converter.service.ts\n        \n\n            \n                Description\n            \n            \n                Inject to root of app\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                kelvinToCelcius\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            kelvinToCelcius\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    kelvinToCelcius(params)\n                \n            \n\n\n            \n                \n                    Defined in src/app/temperature-converter.service.ts:22\n                \n            \n\n\n            \n                \n                    Convert from Kelvin to Celcius\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Kelvin temperature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n/**\n * Inject to root of app\n*/\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Service for Temperature Converter\n*/\nexport class TemperatureConverterService {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Convert from Kelvin to Celcius\n   * @param params Kelvin temperature\n   */\n  public kelvinToCelcius(params){\n    return (params-273.15)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIServiceServiceService.html":{"url":"injectables/UIServiceServiceService.html","title":"injectable - UIServiceServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIServiceServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/uiservice-service.service.ts\n        \n\n            \n                Description\n            \n            \n                Inject to root of app\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                loaderLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dismissLoading\n                            \n                            \n                                    Public\n                                showLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loading: LoadingController)\n                    \n                \n                        \n                            \n                                Defined in src/app/uiservice-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor description\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                From ionic/angular\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dismissLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dismissLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/uiservice-service.service.ts:49\n                \n            \n\n\n            \n                \n                    Dismiss Loading Dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            showLoading\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    showLoading(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/uiservice-service.service.ts:35\n                \n            \n\n\n            \n                \n                    Show Loading Dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        UI Loading Message\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HTMLIonLoadingElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/uiservice-service.service.ts:24\n                            \n                        \n\n                \n                    \n                        Loader nstace create\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loaderLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/uiservice-service.service.ts:29\n                            \n                        \n\n                \n                    \n                        Continue show loading dialog\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\n/**\n * Inject to root of app\n*/\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service for UILoading\n*/\nexport class UIServiceServiceService {\n\n/**\n * Constructor description\n * @param {LoadingController} loading From ionic/angular\n */\n  constructor(private loading: LoadingController) { }\n\n/**\n * Loader nstace create\n */\n  private loader: HTMLIonLoadingElement;\n\n/**\n * Continue show loading dialog\n */\n  private loaderLoading = false;\n\n  /**\n   * Show Loading Dialog\n   * @param message UI Loading Message\n   */\n  public showLoading(message: string) {\n      this.loaderLoading = true;\n      this.loading.create({\n          message,\n          showBackdrop: true\n      }).then(load => {\n          this.loader = load;\n          load.present().then(() => { this.loaderLoading = false; });\n      });\n  }\n\n  /**\n   * Dismiss Loading Dialog\n   */\n  public dismissLoading() {\n      const interval = setInterval(() => {\n          if (this.loader || !this.loaderLoading) {\n              this.loader.dismiss().then(() => { this.loader = null; clearInterval(interval)});\n          } else if (!this.loader && !this.loaderLoading) {\n              clearInterval(interval);\n          }\n      }, 500);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UIToastService.html":{"url":"injectables/UIToastService.html","title":"injectable - UIToastService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UIToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/uitoast.service.ts\n        \n\n            \n                Description\n            \n            \n                Inject to root of app\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toastController\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                presentToast\n                            \n                            \n                                    Public\n                                    Async\n                                presentToastWithOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/uitoast.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor description\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                From ionic/angular\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentToast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/uitoast.service.ts:26\n                \n            \n\n\n            \n                \n                    Network issue Toast\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            presentToastWithOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    presentToastWithOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/uitoast.service.ts:38\n                \n            \n\n\n            \n                \n                    Toast With Option\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastController\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastController\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/uitoast.service.ts:21\n                            \n                        \n\n                \n                    \n                        From ionic/angular\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n/**\n * Inject to root of app\n*/\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Service for Toast\n*/\nexport class UIToastService {\n  \n\n /**\n * Constructor description\n * @param {ToastController} toastController From ionic/angular\n */\n  constructor(public toastController: ToastController) { }\n\n/**\n* Network issue Toast\n*/\n  public async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Network issue ...',\n      duration: 1200,\n      cssClass:\"toast-width-class\"\n    });\n    toast.present();\n  }\n\n/**\n* Toast With Option\n*/\n  public async presentToastWithOptions() {\n    const toast = await this.toastController.create({\n      header: 'Toast header',\n      message: 'Click to Close',\n      position: 'top',\n      buttons: [\n        {\n          side: 'start',\n          icon: 'star',\n          text: 'Favorite',\n          handler: () => {\n            console.log('Favorite clicked');\n          }\n        }, {\n          text: 'Done',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n    });\n    toast.present();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/buisness-logic.service.ts\n            \n            injectable\n            BuisnessLogicService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/home/home.page.ts\n            \n            component\n            HomePage\n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                src/app/over-lap-graph-for-weather-prediction.service.ts\n            \n            injectable\n            OverLapGraphForWeatherPredictionService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/repository.service.ts\n            \n            injectable\n            RepositoryService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/temperature-converter.service.ts\n            \n            injectable\n            TemperatureConverterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/uiservice-service.service.ts\n            \n            injectable\n            UIServiceServiceService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/uitoast.service.ts\n            \n            injectable\n            UIToastService\n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ~8.2.14\n        \n            @angular/core : ~8.2.14\n        \n            @angular/forms : ~8.2.14\n        \n            @angular/platform-browser : ~8.2.14\n        \n            @angular/platform-browser-dynamic : ~8.2.14\n        \n            @angular/router : ~8.2.14\n        \n            @ionic-native/core : ^5.0.7\n        \n            @ionic-native/splash-screen : ^5.0.0\n        \n            @ionic-native/status-bar : ^5.0.0\n        \n            @ionic/angular : ^5.0.7\n        \n            chart.js : ^2.9.3\n        \n            core-js : ^2.5.4\n        \n            rxjs : ~6.5.1\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nBuisnessLogicService\n\nBuisnessLogicService\n\nAppModule -->\n\nBuisnessLogicService->AppModule\n\n\n\n\n\nOverLapGraphForWeatherPredictionService\n\nOverLapGraphForWeatherPredictionService\n\nAppModule -->\n\nOverLapGraphForWeatherPredictionService->AppModule\n\n\n\n\n\nRepositoryService\n\nRepositoryService\n\nAppModule -->\n\nRepositoryService->AppModule\n\n\n\n\n\nTemperatureConverterService\n\nTemperatureConverterService\n\nAppModule -->\n\nTemperatureConverterService->AppModule\n\n\n\n\n\nUIServiceServiceService\n\nUIServiceServiceService\n\nAppModule -->\n\nUIServiceServiceService->AppModule\n\n\n\n\n\nUIToastService\n\nUIToastService\n\nAppModule -->\n\nUIToastService->AppModule\n\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        2 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
